openapi: 3.0.3
info:
  title: ToDo API
  version: 1.0.0
  description: API для управления задачами, тегами и связями между ними

servers:
  - url: http://localhost:8000/api

components:
  securitySchemes:
    ApiTokenAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    TaskWithoutTags:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        user_id:
          type: integer
        id:
          type: integer
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        text:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagRef'
    Tag:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        user_id:
          type: integer
    TagRef:
      type: object
      properties:
        tag:
          type: string
        tag_id:
          type: integer
        id:
          type: integer
    TaskTag:
      type: object
      properties:
        task_id:
          type: integer
        tag_id:
          type: integer
    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
        message:
          type: string
    ErrorResponse:
      type: object
      properties:
        message:
          type: string

security:
  - ApiTokenAuth: []

paths:
  /login:
    post:
      summary: Авторизация пользователя
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
              required: [name, password]
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Неверный логин или пароль
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /register:
    post:
      summary: Регистрация пользователя
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
              required: [name, email, password]
      responses:
        '201':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks:
    get:
      summary: Получить все задачи пользователя
      tags: [Task]
      security:
        - ApiTokenAuth: []
      responses:
        '200':
          description: Список задач
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /task/{id}:
    get:
      summary: Получить задачу по id
      tags: [Task]
      security:
        - ApiTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Задача
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Обновить задачу
      tags: [Task]
      security:
        - ApiTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                text:
                  type: string
      responses:
        '200':
          description: Задача обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithoutTags'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Удалить задачу
      tags: [Task]
      security:
        - ApiTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешное удаление
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /task:
    post:
      summary: Создать задачу
      tags: [Task]
      security:
        - ApiTokenAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                text:
                  type: string
              required: [title, text]
      responses:
        '201':
          description: Задача создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskWithoutTags'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tags:
    get:
      summary: Получить все теги пользователя
      tags: [Tag]
      security:
        - ApiTokenAuth: []
      responses:
        '200':
          description: Список тегов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'

  /tag/{id}:
    get:
      summary: Получить тег по id
      tags: [Tag]
      security:
        - ApiTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Тег
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Обновить тег
      tags: [Tag]
      security:
        - ApiTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        '200':
          description: Тег обновлён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Удалить тег
      tags: [Tag]
      security:
        - ApiTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Тег удалён
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tag:
    post:
      summary: Создать тег
      tags: [Tag]
      security:
        - ApiTokenAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
              required: [title]
      responses:
        '201':
          description: Тег создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks_tags/{id}:
    get:
      summary: Получить задачи, связанные с тегом
      tags: [TaskTag]
      security:
        - ApiTokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Список задач
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string

  /task_tag:
    post:
      summary: Привязать тег к задаче
      tags: [TaskTag]
      security:
        - ApiTokenAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                tag_id:
                  type: integer
              required: [task_id, tag_id]
      responses:
        '201':
          description: Связь создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Ошибка (например, связь уже существует)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Не найдено (например, задача не найдена)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Удалить тег у задачи
      tags: [TaskTag]
      security:
        - ApiTokenAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                tag_id:
                  type: integer
              required: [task_id, tag_id]
      responses:
        '200':
          description: Связь удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '404':
          description: Не найдено (например, задача или связь не найдена)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
